---
swagger: "2.0"
info:
  title:
    Fn::Sub: GEJA-${ENVIRONMENT}
  description: E-commerce API
  contact:
    name: Joakim Hedlund
  version: 1.0.1
servers:
  - url: https://api.geja.se/
    description: Production server (uses live data)
  - url: https://aws.triplehead.net/geja/
    description: Sandbox server (uses test data)
schemes:
  - https

definitions:
  CategorySet:
    type: array
    description: List of Category objects.
    items:
      $ref: '#/definitions/Category'

  Category:
    type: object
    properties:
      title:
        type: string
        description: Category name. Displayed in menus
      path:
        type: string
        description: The URL slug
      categoryDescription:
        type: string
        description: Long description, used on the category page.
      icon:
        $ref: '#/definitions/Image'

  ProductSet:
    type: array
    description: List of Products matching the query.
    items:
      $ref: '#/definitions/Product'

  Product:
    type: object
    properties:
      sku:
        type: string
        description: A unique ID for the product.
      slug:
        type: string
        description: E.g. `super-nice-bracelet-123`
      productName:
        type: string
        description: E.g. `Super nice bracelet!`
      productDescription:
        type: string
        description: Longform description. Supports Markdown.
      price:
        type: integer
        description: SEK price including VAT
      image:
        type: array
        items:
          $ref: '#/definitions/Image'

  Image:
    type: object
    properties:
      title:
        type: string
        description: File description in Contentful
      file:
        type: object
        properties:
          contentType:
            type: string
            description: MIME type of the file.
          details:
            type: object
            properties:
              size:
                type: integer
                description: File size in bytes
              image:
                type: object
                properties:
                  width:
                    type: integer
                    description: Pixel width
                  height:
                    type: integer
                    description: Pixel height
          fileName:
            type: string
            description: The original file name
          url:
            type: string
            description: Protocol-relative URL to the Contentful-hosted file.

x-definitions:
  AWSLambda: &AWSLambda
    x-amazon-apigateway-integration:
      uri:
        Fn::Sub: arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/${ApiHandlerLambda.Arn}/invocations
      passthroughBehavior: when_no_match
      httpMethod: POST
      type: aws_proxy
  CORSHeaders: &CORSHeaders
    Access-Control-Allow-Headers:
      type: string
    Access-Control-Allow-Methods:
      type: string
    Access-Control-Allow-Origin:
      type: string


paths:

  /categories:
    get:
      <<: *AWSLambda
      summary: Retrieves all available product categories
      responses:
        200:
          description: Success
          headers:
            <<: *CORSHeaders
          schema:
            $ref: '#/definitions/CategorySet'

  /categories/{path}/products:
    get:
      <<: *AWSLambda
      summary: Returns all products in a category.
      parameters:
        - name: path
          in: path
          type: string
          required: true
      responses:
        200:
          description: Success
          headers:
            <<: *CORSHeaders
          schema:
            $ref: '#/definitions/ProductSet'


  /products/{slug}:
    get:
      <<: *AWSLambda
      summary: Retrieve a single product.
      parameters:
        - name: slug
          in: path
          type: string
          required: true
      responses:
        200:
          description: Success
          headers:
            <<: *CORSHeaders
          schema:
            $ref: '#/definitions/Product'

x-amazon-apigateway-request-validator: validate-body-and-params
x-amazon-apigateway-request-validators:
  validate-body-and-params:
    validateRequestParameters: true
    validateRequestBody: true
x-amazon-apigateway-gateway-responses:
  DEFAULT_4XX:  &gatewayCorsResponse
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type'"
      gatewayresponse.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST'"
      gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
  DEFAULT_5XX: *gatewayCorsResponse
